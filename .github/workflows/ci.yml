name: CI (PR)

on:
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - "README.md"
      - ".github/ISSUE_TEMPLATE/**"

permissions:
  contents: read

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, intl
      - name: Install deps (no scripts)
        run: composer install --no-interaction --no-progress --prefer-dist --no-scripts --no-plugins
      - name: Pint --test
        run: vendor/bin/pint --test || true

  static-analysis:
    name: static-analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, intl
          ini-values: memory_limit=-1
      - name: Install deps (no scripts)
        run: composer install --no-interaction --no-progress --prefer-dist --no-scripts --no-plugins
      - name: PHPStan
        run: |
          if [ -x vendor/bin/phpstan ]; then
            vendor/bin/phpstan analyse --no-progress || true
          else
            echo "phpstan not installed, skipping"
          fi

  tests:
    name: tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, intl, redis, pdo_pgsql
      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-
      - name: Composer install
        run: composer install --no-interaction --no-progress --prefer-dist
      - name: App key for tests
        run: |
          [ -f .env ] || cp .env.example .env
          php artisan key:generate
      - name: PHPUnit
        run: vendor/bin/phpunit --colors=always
